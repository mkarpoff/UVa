#!/bin/bash
#  tester v4.1.1
# 
#  Copyright (c) 2015 Marcus Karpoff <marcuskarpoff@gmail.com>
#  
#  Permission to use, copy, modify, and distribute this software for any
#  purpose with or without fee is hereby granted, provided that the above
#  copyright notice and this permission notice appear in all copies.
#  
#  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#  
VERSION="
tester 4.0.2 
Copyright (c) 2015 Marcus Karpoff
Permission to use, copy, modify, and distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

Written by Marcus Karpoff.
"
	RED='\033[1;31m'          # Red
	GREEN='\033[1;32m'        # Green
	ORANGE='\033[0;33m'       # Yellow
	BLUE='\033[1;34m'         # Blue
	PURPLE='\033[0;35m'       # Purple
	CYAN='\033[1;36m'         # Cyan
	WHITE='\033[0;37m'  
	UWHITE='\033[0;4;37m'  
	BWHITE='\033[1;37m'
	BUWHITE='\033[1;4;37m'
TESTBREAK="================================================\n"

function print_help() {
printf "
${BWHITE}NAME
\t${WHITE}tester - tests program\n

${BWHITE}SYNOPSIS
\ttester${WHITE} [${BWHITE}-i ${UWHITE}IN_FOLDER${WHITE}] [${BWHITE}-o ${UWHITE}OUT_FOLDER${WHITE}] [ ${UWHITE}OPTION${WHITE}]... [${UWHITE}FILE${WHITE}]

${BWHITE}DESCRIPTION${WHITE}
\tTest FILE by checking using files in ${UWHITE}IN_FOLDER${WHITE} agains ${UWHITE}OUT_FOLDER${WHITE}.
\tIf ${UWHITE}FILE${WHITE} is left blank then it defaults to ${UWHITE}ans${WHITE}
\tIf ${UWHITE}IN_FOLDER${WHITE} is left blank then it defaults to ${UWHITE}TestFolder/Input/${WHITE}
\tIf ${UWHITE}OUT_FOLDER${WHITE} is left blank then it defaults to ${UWHITE}TestFolder/Output/${WHITE}

\tFor full operation this program requires ${BWHITE}colordiff${WHITE} to be installed.

\t${BWHITE}-a${WHITE}\tcontinue running after a failed case

\t${BWHITE}-b${WHITE}\tuse bland colourless output

\t${BWHITE}-i${WHITE}=${UWHITE}IN_FOLDER${WHITE}
\t\tuse IN_FOLDER as folder for input files. 
\t\tdefault is TestFiles/Input/

\t${BWHITE}-o${WHITE}=${UWHITE}OUT_FOLDER${WHITE}
\t\tuse OUT_FOLDER as folder for input files. 
\t\tdefault is TestFiles/Output/


\t${BWHITE}-s${WHITE}\tdo not print erroneous outputs or diffs

\t${BWHITE}-h, -?${WHITE}
\t\tprint help page

${BWHITE}AUTHOR${WHITE}
\tWritten by Marcus Karpoff

${BWHITE}COPYRIGHT${WHITE}
\tCopyright (c) 2015 Marcus Karpoff 
\t
\tPermission to use, copy, modify, and distribute this software for any
\tpurpose with or without fee is hereby granted, provided that the above
\tcopyright notice and this permission notice appear in all copies.

${BWHITE}WARRANTIES${WHITE}
\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

"
}

INPUT=TestFiles/Input/
OUTPUT=TestFiles/Output/
COLOR=1
ALL=0
SILENT=0
EXE="ans"


while [[ "$1" != "" ]]; do
	if [[ "$1" == "-"* ]]; then
		while getopts "\?hi:o:bsva" opt; do
			case "$opt" in
			a)
				ALL=1;;
			b)
				COLOR=0;;
			i)
				INPUT="$OPTARG"
				shift
				;;
			o)
				OUTPUT="$OPTARG"
				shift
				;;
			s)
				SILENT=1;;
			v)
				printf "$VERSION"
				exit
				;;
			h | ?)
				print_help
				exit
				;;
			esac
		done
		shift
	else
		EXE=$1
		shift
	fi
done
DIFFPROG=$(command -v colordiff)
if [ "$DIFFPROG" == "" ];	then
	DIFFPROG=diff
fi
if [[ $COLOR -eq 0 ]]; then
	RED=
	GREEN=
	ORANGE=
	BLUE=
	PURPLE=
	CYAN=
	WHITE=
	UWHITE=
	BWHITE=
	BUWHITE=
	DIFFPROG=diff
fi
case ${INPUT} in
	*/) INPUT=$INPUT;;
	*) INPUT=$INPUT/;;
esac
case ${OUTPUT} in
	*/) OUTPUT=$OUTPUT;;
	*) OUTPUT=$OUTPUT/;;
esac

if [ ! -f "$EXE" ]; then
	printf "${RED}No program named (${BLUE} $EXE ${RED}) found${WHITE}\n"
	exit
fi
if [ ! -d "$INPUT" ]; then
	printf "${RED}No input folder named (${BLUE} TestFiles/Input/ ${RED})${WHITE}\n"
	exit
fi
if [ ! -d "$OUTPUT" ]; then
	printf "${RED}No output folder named (${BLUE} TestFiles/Output/ ${RED})${WHITE}\n"
	exit
fi

printf "Program:${BLUE} $EXE${WHITE}\n"
NUMTESTS=$( /bin/ls -l ${INPUT} | wc -l )
NUMTESTS=$( expr $NUMTESTS - 1)
printf "Num tests: ${RED}$NUMTESTS${WHITE}\n"
for f in $(/bin/ls "$INPUT" ); do
		printf "${TESTBREAK}"
		TIMEFORMAT="%3Rs "
		MEM=$( ( /usr/bin/time -f '%M kb' ./${EXE} < ${INPUT}${f} >/dev/null )2>&1 )
		TIME=$( ( time ( ./$EXE < ${INPUT}${f} > temp ) >&2 ) 2>&1 )
		printf "TEST: ${RED}${f}${RED}${WHITE}\t"
		if [ ! -f ${OUTPUT}${f} ]; then
			printf "${RED}No matching output file for input file (${BLUE} $f ${RED})\n${WHITE}"
		else
			EXP=$OUTPUT$f
			DIFF=$(diff temp $EXP)
			LLE=$(wc -L $EXP | awk '{print $1}')
			LLA=$(wc -L temp | awk '{print $1}')
			COL=$LLA
			if [ $LLE -gt $LLA ]; then
				COL=$LLE
			fi
			COLSIZE=$COL
			SBS=1
			if [ $COLSIZE -gt 50 ]; then
				SBS=0
				COLSIZE="`tput cols`"
				COL=$(expr $COLSIZE / 2)
			elif [ $COLSIZE -lt 12 ]; then
				COLSIZE=24
				COL=12
			else
				COLSIZE=$(expr $COL \* 2)
				COLSIZE=$(expr $COLSIZE + 5)
			fi
			pad=$(printf '%0.1s' "-"{1..80})

			if [ "$DIFF" != "" ]; then
				printf "${RED}Failed\t${BLUE}${TIME} ${WHITE}\n"
				printf "${RED}EXPECTED:${WHITE}"
				printf "%*.*s" 0 $((COL - 12 )) "$pad"
				printf "${BLUE}ACTUAL:${WHITE}\n"
				if [ $SBS -eq 1 ]; then
					$DIFFPROG -yW "$COLSIZE" $EXP temp
				else
					$DIFFPROG $EXP temp
				fi
				if [ $ALL -eq 0 ]; then
					rm -f temp
					printf "$TESTBREAK"
					break
				fi
			else
				printf "${GREEN}Passed\t${BLUE}${TIME} ${MEM}${WHITE}\n"
			fi
		fi
		rm -f temp
done
printf "$TESTBREAK"

